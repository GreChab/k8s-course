apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pg-post-statefulset
  namespace: k8s-course
  labels:
    app: pg-post
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg-post
  template:
    metadata:
      labels:
        app: pg-post
    spec:
      containers:
        - name: postgres-post
          image: postgres:15.2-alpine
          ports:
            - containerPort: 5431
          env:
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: app-configmap
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: post_postgres_db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: post_datasource_username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: post_datasource_password
          volumeMounts:
            - name: pg-post-db
              mountPath: /var/lib/postgresql/data
              subPath: postdata
            - name: pg-schema-script
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -d pg-post
            initialDelaySeconds: 5
            periodSeconds: 3
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -d pg-post
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -d pg-post
            periodSeconds: 10
      volumes:
        - name: pg-schema-script
          configMap:
            name: app-configmap
            items:
              - key: "post_schema.sql"
                path: "schema.sql"
  volumeClaimTemplates:
    - metadata:
        name: pg-post-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "hostpath"
        resources:
          requests:
            storage: 1Gi
---

apiVersion: v1
kind: Service
metadata:
  name: pg-post-service
  namespace: k8s-course
spec:
  type: ClusterIP
  selector:
    app: pg-post
  ports:
    - protocol: TCP
      port: 5431
      targetPort: 5431
